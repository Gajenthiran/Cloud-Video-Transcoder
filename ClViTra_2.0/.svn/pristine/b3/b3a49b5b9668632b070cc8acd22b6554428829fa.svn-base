package com.ClViTra.rest;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URISyntaxException;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.sun.jersey.core.header.FormDataContentDisposition;
import com.sun.jersey.multipart.FormDataParam;
import com.xuggle.xuggler.IContainer;
import com.xuggle.xuggler.io.IURLProtocolHandler;

@Path("/file")
public class UploadFileService {

	@POST
	@Path("/upload")
	@Consumes(MediaType.MULTIPART_FORM_DATA)
	public Response uploadFile(
			@FormDataParam("file") InputStream uploadedInputStream,
			@FormDataParam("file") FormDataContentDisposition fileDetail) {

		String output = null;
		java.net.URI location = null;
		String uploadPath = "d://uploaded/";
		String uploadedFileLocation = uploadPath + fileDetail.getFileName();

		if (fileDetail.getFileName().endsWith(".mp4")) {
			// saving the file
			writeToFile(uploadedInputStream, uploadedFileLocation);
			// Generating Thumbnail
			String ThumbnailFilename = Thumbnail.Generate_Thumbnail(uploadPath, fileDetail.getFileName());
			//Get the duration of the video
			long Duration = getDuration(uploadedFileLocation);
			// Entering in the Database
			Java2MySql.VideoUpdate(uploadedFileLocation, "MP4", ThumbnailFilename, Duration);
			output = "File uploaded to : " + uploadedFileLocation;
			
		}
		
		else if (fileDetail.getFileName().endsWith(".avi")) {
			// saving the file
			writeToFile(uploadedInputStream, uploadedFileLocation);
			// Generating Thumbnail
			String ThumbnailFilename = Thumbnail.Generate_Thumbnail(uploadPath, fileDetail.getFileName());
			//Get the duration of the video
			long Duration = getDuration(uploadedFileLocation);
			// Entering in the Database
			Java2MySql.VideoUpdate(uploadedFileLocation, "AVI", ThumbnailFilename, Duration);
			output = "File uploaded to : " + uploadedFileLocation;
		}

		else if (fileDetail.getFileName().endsWith(".wmv")) {
			// saving the file
			writeToFile(uploadedInputStream, uploadedFileLocation);
			// Generating Thumbnail
			String ThumbnailFilename = Thumbnail.Generate_Thumbnail(uploadPath, fileDetail.getFileName());
			//Get the duration of the video
			long Duration = getDuration(uploadedFileLocation);
			// Entering in the Database
			Java2MySql.VideoUpdate(uploadedFileLocation, "WMV", ThumbnailFilename, Duration);
			output = "File uploaded to : " + uploadedFileLocation;
		}
		
		else {
			
			output = "Format not supported! Please try again. <br> Supported formats: MP4, AVI. "
					+ "<br> Click <a href = \"http://localhost:8080/RESTfulExample/FileUpload.html\">back</a>to try again!";
		}

		new Transcode();
		return Response.status(200).entity(output).build();

	}

	// save uploaded file to new location
	private void writeToFile(InputStream uploadedInputStream,
			String uploadedFileLocation) {

		try {
			OutputStream out = new FileOutputStream(new File(
					uploadedFileLocation));
			int read = 0;
			byte[] bytes = new byte[1024];

			out = new FileOutputStream(new File(uploadedFileLocation));
			while ((read = uploadedInputStream.read(bytes)) != -1) {
				out.write(bytes, 0, read);
			}
			out.flush();
			out.close();
		} catch (IOException e) {

			e.printStackTrace();
		}
	}
	
	private long getDuration(String movie) {
		
		IContainer container = IContainer.make();
	    //IURLProtocolHandler movie = null;
		if (container.open(movie, IContainer.Type.READ, null) < 0) {
	        throw new RuntimeException("Cannot open '" + movie + "'");
	    }
		
	    //logger.info("# Duration (ms): " + ((container.getDuration() == Global.NO_PTS) ? "unknown" : "" + container.getDuration() / 100));
	    //logger.info("# File size (bytes): " + container.getFileSize());
	    //logger.info("# Bit rate: " + container.getBitRate());
		return container.getDuration() / 1000000;
		
	}
	
}